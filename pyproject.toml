[tool.poetry]
name = "pytest-parametrize-suite"
version = "23.1.1"
description = "A simple pytest extension for creating a named test suite."
authors = ["Sean Stewart <sean_stewart@me.com>"]
readme = "README.md"
license = "GPL-3.0"
packages = [{include = "pytest_parametrize_suite", from = "src"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Framework :: Pytest",
    "Topic :: Software Development :: Testing",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries",
]

[tool.poetry.plugins."pytest11"]
suite = "pytest_parametrize_suite.plugin"

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
pytest = "*"
typing-extensions = {version = "^4.4.0", python = "<3.10"}

[tool.poetry.group.test.dependencies]
pytest-cov = "^4.0.0"

[tool.poetry.group.lint.dependencies]
mypy = "^0.991"
black = "^22.12.0"
flake8 = "^6.0.0"
flake8-bugbear = "^23.1.14"
isort = "^5.11.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.21.0"
bumpver = "^2022.1120"

[tool.black]
line-length = 88
extend-exclude = '''
/(.cache/|.venv/|.poetry/)
'''

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src/pytest_parametrize_suite,$MYPY_CONFIG_FILE_DIR/example"
no_namespace_packages = true
python_version = "3.11"
install_types = true
non_interactive = true
ignore_missing_imports = true
no_strict_optional = true
follow_imports = "silent"
exclude = ".*tests/.*|.*docs/.*"

[tool.pytest.ini_options]
testpaths = ["tests"]
minversion = "7.0"

[bumpver]
current_version = "v23.1.1"
version_pattern = "vYY.MM.PATCH[-TAGNUM]"
commit_message = "bump version to {new_version} [ci skip]"
tag = false
push = true
commit = true

[bumpver.file_patterns]
"pyproject.toml" = [ 'version = "{pep440_version}"', 'current_version = "{version}"' ]
"src/pytest_parametrize_suite/__init__.py" = ['__version__ = "{pep440_version}"']


[build-system]
requires = ["poetry-core>=1.3"]
build-backend = "poetry.core.masonry.api"
